{
	"info": {
		"_postman_id": "3629cec8-1132-4296-a493-9fc5abfef633",
		"name": "1) Rest API Automation Testing",
		"description": "REST API testing involves evaluating the functionality of a RESTful web service by sending HTTP requests to the API and examining the responses. REST (Representational State Transfer) is an architectural style commonly used in web services, and RESTful APIs communicate over standard HTTP methods (e.g., GET, POST, PUT, DELETE). Here's a detailed description of REST API testing:\n\n### Overview:\n\nREST API testing is a crucial aspect of software testing that focuses on verifying the behavior and performance of RESTful web services. These APIs enable communication and data exchange between different systems, making them integral components of modern software architectures.\n\n### Key Aspects of REST API Testing:\n\n1. **HTTP Methods:**\n    \n    - RESTful APIs use standard HTTP methods to perform various operations. Common methods include:\n        \n        - GET: Retrieve information.\n            \n        - POST: Create a new resource.\n            \n        - PUT: Update an existing resource.\n            \n        - DELETE: Remove a resource.\n            \n2. **Request and Response:**\n    \n    - Testing involves crafting HTTP requests with specific parameters, headers, and payloads to simulate different scenarios.\n        \n    - Responses are examined for correct status codes, headers, and response bodies.\n        \n3. **URI (Uniform Resource Identifier):**\n    \n    - URIs are used to uniquely identify resources. Testing involves validating that URIs follow conventions and that they correctly identify resources.\n        \n4. **Authentication and Authorization:**\n    \n    - Testing ensures that authentication mechanisms, such as API keys or OAuth tokens, are correctly implemented.\n        \n    - Authorization checks, ensuring that only authorized users can access certain resources, are also tested.\n        \n5. **Data Formats:**\n    \n    - RESTful APIs often communicate using JSON or XML as data interchange formats. Testing involves validating that the API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32291674",
		"_collection_link": "https://restless-desert-470943.postman.co/workspace/16f0525e-890e-43d0-970f-711807fd5ec8/collection/32291674-3629cec8-1132-4296-a493-9fc5abfef633?action=share&source=collection_link&creator=32291674"
	},
	"item": [
		{
			"name": "Get Method Get All users details request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTING_URL}}/users?page={{PAGE}}",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{PAGE}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user details using the user ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTING_URL}}/users/{{ID}}",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating the user request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTING_URL}}/users",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Checking response using variable",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTING_URL}}/users?page=2",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update the user details by userID",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTING_URL}}/users/2",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user by user ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{HOSTING_URL}}/users/2",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "updating the user job by user ID",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"job\": \"software Engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTING_URL}}/users/2",
					"host": [
						"{{HOSTING_URL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}